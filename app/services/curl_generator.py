import json
import shlex
from typing import Dict, Any


class CurlGeneratorService:
    def generate(self, request: Dict[str, Any]) -> str:
        """
        simple method to generate curl of a request
        takes in the request generated by llmservice
        returns the curl command

        had issues with it sending the escaped string like: \"date_made\"
        so used shlex to un-escape it.
        """
        if not request:
            raise ValueError("No request data provided")

        # get the method and url
        method = request.get("method", "GET")
        url = request.get("url", "")

        curl_parts = ["curl"]

        if method != "GET":
            curl_parts += ["-X", method]

        # add the url
        curl_parts.append(shlex.quote(url))

        # headers
        for header_name, header_value in request.get("headers", {}).items():

            header_str = f"{header_name}: {header_value}"
            curl_parts += ["-H", shlex.quote(header_str)]

        # params
        query_params = request.get("query_params", {})
        if query_params and "?" not in url:
            query_string = "&".join([f"{k}={v}" for k, v in query_params.items()])
            curl_parts[-1] = shlex.quote(f"{url}?{query_string}")

        # post data
        if "post_data" in request:
            post_data = request["post_data"]
            content_type = post_data.get("mime_type", "")
            body_text = post_data.get("text", "")

            if body_text:
                if "json" in content_type.lower():
                    try:
                        json_data = json.loads(body_text)
                        body_text = json.dumps(json_data)
                    except json.JSONDecodeError:
                        pass

                curl_parts += ["-d", shlex.quote(body_text)]

            elif "post_params" in request:
                for param_name, param_value in request["post_params"].items():
                    curl_parts += ["-F", shlex.quote(f"{param_name}={param_value}")]

        curl_parts.append("-L")

        curl_command = " ".join(curl_parts)

        return curl_command
